-appointment.html -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SmartCare</title>
    <link rel="stylesheet" href="book-appointment.css">
    <!-- Add Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <nav class="sidebar">
        <div class="logo">SmartCare</div>
        <ul class="sidebar-links">
            <li><a href="/patient-dashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a></li>
            <li><a href="patient-page.html"><i class="fas fa-users"></i> Patient</a></li>
            <li><a href="#doctors"><i class="fas fa-user-md"></i> Doctor</a></li>
            <li><a href="appointments.html"><i class="fas fa-calendar-check"></i> Appointments</a></li>
            <li><a href="#reports"><i class="fas fa-chart-bar"></i> Reports</a></li>
            <li><a href="#billings"><i class="fas fa-file-invoice-dollar"></i> Billings</a></li>
            <li><a href="/chats"><i class="fas fa-comments"></i> Chats</a></li>
        </ul>
    </nav>

    <div class="main-content">
        <header class="header">
            <div class="header-left">
                <h1>Book an Appointment</h1>
                <div class="search-container">
                    <i class="fas fa-search"></i>
                    <input type="text" placeholder="Search Here" class="search-input">
                </div>
            </div>
            <div class="user-profile">
                <img src="https://plus.unsplash.com/premium_photo-1678486955261-bbd824e18aee?w=900&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NjV8fHBhdGllbnRzJTIwcHJvZmlsZSUyMHBpY3R1cmVzfGVufDB8fDB8fHww" alt="Lily Park" class="chat-img">
                <button class="action-btn logout-btn">Logout</button>
            </div>
        </header>

        <section class="appointment-form-section">
            <div class="appointment-form">
                <h2>Book an Appointment</h2>
                <form id="appointment-form">
                    <div class="form-group">
                        <label for="patientId">Patient</label>
                        <select id="patientId" name="patientId" required>
                            <option value="">Select Patient</option>
                            <!-- These options will be populated dynamically from the database -->
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="doctorId">Doctor</label>
                        <select id="doctorId" name="doctorId" required>
                            <option value="">Select Doctor</option>
                            <!-- These options will be populated dynamically from the database -->
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="appointmentDate">Appointment Date</label>
                        <input type="date" id="appointmentDate" name="appointmentDate" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="appointmentTime">Appointment Time</label>
                        <input type="time" id="appointmentTime" name="appointmentTime" required>
                    </div>
                    
                    <div class="form-group">
                        <label for="status">Status</label>
                        <select id="status" name="status" required>
                            <option value="scheduled" selected>Scheduled</option>
                            <option value="pending">Pending</option>
                            <option value="completed">Completed</option>
                            <option value="cancelled">Cancelled</option>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label for="notes">Notes</label>
                        <textarea id="notes" name="notes" placeholder="Add appointment notes or health problem details" rows="4"></textarea>
                    </div>
                    
                    <div class="form-actions">
                        <button type="button" class="cancel-btn">Cancel</button>
                        <button type="submit" class="book-btn">Book Appointment</button>
                    </div>
                </form>
            </div>
        </section>
    </div>

    <!-- Logout Modal -->
    <div id="logoutModal" class="modal">
        <div class="modal-content">
            <h2>Confirm Logout</h2>
            <p>Are you sure you want to logout?</p>
            <div class="modal-actions">
                <button class="action-btn close-btn">Cancel</button>
                <button class="action-btn logout-confirm-btn">Logout</button>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        // Fetch patients and populate the patient dropdown
        fetch('/api/patients')
            .then(response => response.json())
            .then(patients => {
                const patientSelect = document.getElementById('patientId');
                patients.forEach(patient => {
                    const option = document.createElement('option');
                    option.value = patient.id;
                    option.textContent = `${patient.name} (ID: ${patient.id})`;
                    patientSelect.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error fetching patients:', error);
            });
            
        // Fetch doctors and populate the doctor dropdown
        fetch('/api/doctors')
            .then(response => response.json())
            .then(doctors => {
                const doctorSelect = document.getElementById('doctorId');
                doctors.forEach(doctor => {
                    const option = document.createElement('option');
                    option.value = doctor.id;
                    option.textContent = `Dr. ${doctor.name} - ${doctor.specialization}`;
                    doctorSelect.appendChild(option);
                });
            })
            .catch(error => {
                console.error('Error fetching doctors:', error);
            });
            
        // Handle form submission
        const appointmentForm = document.getElementById('appointment-form');
        appointmentForm.addEventListener('submit', function(event) {
            event.preventDefault();
            
            // Get form data
            const formData = new FormData(appointmentForm);
            
            // Combine date and time values
            const date = formData.get('appointmentDate');
            const time = formData.get('appointmentTime');
            const appointmentDateTime = `${date}T${time}`;
            
            // Create appointment data object
            const appointmentData = {
                patientId: parseInt(formData.get('patientId')),
                doctorId: parseInt(formData.get('doctorId')),
                appointmentDate: appointmentDateTime,
                status: formData.get('status'),
                notes: formData.get('notes')
            };
            
            // Send data to server
            fetch('/api/appointments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(appointmentData)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                alert('Appointment booked successfully!');
                window.location.href = 'appointments.html'; // Redirect to appointments page
            })
            .catch(error => {
                console.error('Error booking appointment:', error);
                alert('Error booking appointment. Please try again.');
            });
        });
        
        // Cancel button functionality
        const cancelButton = document.querySelector('.cancel-btn');
        cancelButton.addEventListener('click', function() {
            window.history.back();
        });
        
        // Logout functionality
        const logoutBtn = document.querySelector('.logout-btn');
        const logoutModal = document.getElementById('logoutModal');
        const closeBtn = document.querySelector('.close-btn');
        const logoutConfirmBtn = document.querySelector('.logout-confirm-btn');

        logoutBtn.addEventListener('click', () => {
            logoutModal.style.display = 'flex'; // Changed to flex for proper centering
        });

        closeBtn.addEventListener('click', () => {
            logoutModal.style.display = 'none';
        });

        logoutConfirmBtn.addEventListener('click', () => {
            // Add logout logic here (e.g., redirect to login page)
            window.location.href = 'login.html'; // Example redirect
        });

        // Close modal if user clicks outside of it
        window.addEventListener('click', (event) => {
            if (event.target === logoutModal) {
                logoutModal.style.display = 'none';
            }
        });
    });
    </script>

    <style>
        * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    background-color: #f6f6e5; /* Beige background */
    display: flex;
    min-height: 100vh;
}

/* Sidebar Styles */
.sidebar {
    width: 250px;
    background-color: #ffffff;
    height: 100vh;
    position: fixed;
    padding: 1rem 0; /* Adjusted padding to align content properly */
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
}

.logo {
    font-size: 1.5rem;
    font-weight: bold;
    color: #4caf50; /* Green for SmartCare */
    margin-bottom: 2rem;
    text-align: left; /* Ensure left alignment */
    padding-left: 1rem; /* Add padding to align with navigation links */
}

.sidebar-links {
    list-style: none;
}

.sidebar-links li {
    margin-bottom: 1rem;
}

.sidebar-links a {
    text-decoration: none;
    color: #666;
    font-size: 1rem;
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem; /* Consistent padding for alignment */
    border-radius: 5px;
}

.sidebar-links a i {
    margin-right: 0.5rem;
    color: #4caf50;
}

.sidebar-links a:hover, .sidebar-links a.active {
    background-color: #e8f5e9;
    color: #4caf50;
}

/* Main Content Styles */
.main-content {
    margin-left: 250px; /* Matches sidebar width for alignment */
    flex: 1;
    padding: 1.5rem;
}

/* Header Styles */
.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    background-color: #ffffff; /* White background for header on all pages */
    padding: 1rem;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.header h1 {
    color: #4caf50;
    font-size: 1.5rem;
    text-align: center;
    flex: 1;
}

.user-profile {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.user-circle {
    background-color: #e0e0e0; /* Light gray circle */
    color: #666;
    padding: 0.5rem 1rem;
    border-radius: 20px; /* Circular shape */
    font-size: 0.9rem;
}

.header-left {
    display: flex;
    align-items: center;
    gap: 1.5rem; /* Increased gap for more space, matching Admin Dashboard */
}

.header h1 {
    color: #2e7d32;
    font-size: 1.8rem; /* Larger font size for consistency with Admin Dashboard */
}

.search-container {
    position: relative;
}

.search-container .fas.fa-search {
    position: absolute;
    top: 50%;
    left: 0.7rem;
    transform: translateY(-50%);
    color: #666;
}

.search-input {
    width: 200px; /* Exact width from image */
    padding: 0.7rem 2rem 0.7rem 1.5rem; /* Adjusted for search icon and consistency */
    border: 1px solid #ddd;
    border-radius: 4px; /* Smaller radius for exact match */
    font-size: 0.9rem; /* Adjusted for exact font size */
}

.search-input:focus {
    outline: none;
    border-color: #2e7d32;
    box-shadow: 0 0 5px rgba(46, 125, 50, 0.3);
}

.user-profile {
    display: flex;
    align-items: center;
}

.user-profile img {
    width: 40px; /* Exact size from image */
    height: 40px; /* Exact size from image */
    border-radius: 50%;
    object-fit: cover;
}

/* Appointment Form Section Styles */
.appointment-form-section {
    background-color: #ffffff;
    border-radius: 12px; /* Larger radius for consistency with Admin Dashboard */
    padding: 2rem; /* Adjusted for exact padding */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    max-width: 600px; /* Limited width for centered form */
    margin: 0 auto; /* Center the form */
}

.appointment-form h2 {
    color: #2e7d32;
    font-size: 1.5rem; /* Exact font size from image */
    margin-bottom: 1.5rem; /* Adjusted for exact spacing */
    text-align: center;
}

.form-group {
    margin-bottom: 1rem; /* Adjusted for exact spacing */
}

.form-group label {
    display: block;
    color: #333;
    font-size: 1rem; /* Exact font size from image */
    margin-bottom: 0.5rem; /* Adjusted for exact spacing */
}

.form-group input, .form-group select, .form-group textarea {
    width: 100%;
    padding: 0.8rem; /* Adjusted for exact padding from image */
    border: 1px solid #ddd;
    border-radius: 8px; /* Larger radius for exact match */
    font-size: 0.9rem; /* Adjusted for exact font size */
    background-color: #f5f5f5; /* Light gray background for inputs, matching the image */
    color: #666; /* Matching placeholder text color */
}

.form-group input:focus, .form-group select:focus, .form-group textarea:focus {
    outline: none;
    border-color: #2e7d32;
    box-shadow: 0 0 5px rgba(46, 125, 50, 0.3);
}

.form-group textarea {
    resize: vertical;
    min-height: 100px; /* Adjusted for exact height from image */
}

.form-actions {
    margin-top: 1.5rem; /* Adjusted for exact spacing */
    display: flex;
    gap: 1rem; /* Adjusted for exact spacing */
    justify-content: center;
}

.cancel-btn, .book-btn {
    padding: 0.8rem 1.5rem; /* Adjusted for exact padding from image */
    border: none;
    border-radius: 8px; /* Larger radius for exact match */
    cursor: pointer;
    font-size: 1rem; /* Exact font size from image */
    width: 120px; /* Adjusted for exact width from image */
}

.cancel-btn {
    background-color: #ddd; /* Gray background for Cancel, matching the image */
    color: #333;
}

.cancel-btn:hover {
    background-color: #ccc;
}

.book-btn {
    background-color: #2e7d32; /* Green background for Book Appointment, matching the image */
    color: white;
}

.book-btn:hover {
    background-color: #1b5e20;
}

/* Responsive Design */
@media (max-width: 768px) {
    .sidebar {
        width: 100%;
        height: auto;
        position: relative;
    }

    .main-content {
        margin-left: 0;
        padding: 1.5rem; /* Slightly increased padding for mobile, matching Admin Dashboard */
    }

    .header {
        flex-direction: column;
        gap: 1.5rem; /* Increased gap for mobile, matching Admin Dashboard */
    }

    .header-left {
        width: 100%;
    }

    .search-input {
        width: 100%;
    }

    .appointment-form-section {
        padding: 1.5rem; /* Adjusted padding for mobile */
        max-width: 100%; /* Full width on mobile */
    }

    .form-actions {
        flex-direction: column;
        gap: 1rem; /* Adjusted for exact mobile spacing */
    }

    .cancel-btn, .book-btn {
        width: 100%; /* Full width on mobile */
    }

    .sidebar-links {
        flex-direction: row;
        justify-content: space-around;
        flex-wrap: wrap;
    }

    .sidebar-links li {
        margin: 0.5rem;
    }
}
        /* Logout button styles */
        .action-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: background-color 0.3s ease;
        }

        .logout-btn {
            background-color: #f44336; /* Red color */
            color: #ffffff;
            font-weight: 500;
            margin-left: 1rem;
        }

        .logout-btn:hover {
            background-color: #d32f2f; /* Darker red on hover */
        }

        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: #ffffff;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
            width: 90%;
            max-width: 400px;
            text-align: center;
        }

        .modal-content h2 {
            color: #333;
            margin-bottom: 1rem;
            font-size: 1.2rem;
        }

        .modal-actions {
            margin-top: 2rem;
            display: flex;
            justify-content: center;
            gap: 1.5rem;
        }

        .close-btn {
            background-color: #e0e0e0;
            color: #333;
        }

        .close-btn:hover {
            background-color: #d0d0d0;
        }

        .logout-confirm-btn {
            background-color: #f44336;
            color: #ffffff;
        }

        .logout-confirm-btn:hover {
            background-color: #d32f2f;
        }
    </style>
</body>
</html>